{
  "hash": "c56ecb509b5aadb46281e4b1c11f5974",
  "result": {
    "markdown": "---\ntitle: \"Data Wrangling\"\nauthor: \"Muhammad Shamookh\"\ndate: \"2021-04\"\noutput:\n  html_document:\n    toc: true\n    toc_float: true\n    df_print: paged\n    collapsed: false\n    number_sections: true\n    toc_depth: 3\n    code_folding: hide\n---\n\n\n# Data Wrangling\n\nLast compiled: 2024-05-18\n\nI had to use the reduced data, because my computer could not load the original patent data.\n\n# Challenge No. 01\n## Patent Dominance\n\n\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-1_a6663a3357e86e2c46217eac83429b83'}\n\n```{.r .cell-code}\n# 01 Load libraries ----\n\nlibrary(vroom)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#> ✔ dplyr     1.1.4     ✔ readr     2.1.5\n#> ✔ forcats   1.0.0     ✔ stringr   1.5.1\n#> ✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n#> ✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n#> ✔ purrr     1.0.2     \n#> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#> ✖ readr::col_character()   masks vroom::col_character()\n#> ✖ readr::col_date()        masks vroom::col_date()\n#> ✖ readr::col_datetime()    masks vroom::col_datetime()\n#> ✖ readr::col_double()      masks vroom::col_double()\n#> ✖ readr::col_factor()      masks vroom::col_factor()\n#> ✖ readr::col_guess()       masks vroom::col_guess()\n#> ✖ readr::col_integer()     masks vroom::col_integer()\n#> ✖ readr::col_logical()     masks vroom::col_logical()\n#> ✖ readr::col_number()      masks vroom::col_number()\n#> ✖ readr::col_skip()        masks vroom::col_skip()\n#> ✖ readr::col_time()        masks vroom::col_time()\n#> ✖ readr::cols()            masks vroom::cols()\n#> ✖ readr::date_names_lang() masks vroom::date_names_lang()\n#> ✖ readr::default_locale()  masks vroom::default_locale()\n#> ✖ dplyr::filter()          masks stats::filter()\n#> ✖ readr::fwf_cols()        masks vroom::fwf_cols()\n#> ✖ readr::fwf_empty()       masks vroom::fwf_empty()\n#> ✖ readr::fwf_positions()   masks vroom::fwf_positions()\n#> ✖ readr::fwf_widths()      masks vroom::fwf_widths()\n#> ✖ dplyr::lag()             masks stats::lag()\n#> ✖ readr::locale()          masks vroom::locale()\n#> ✖ readr::output_column()   masks vroom::output_column()\n#> ✖ readr::problems()        masks vroom::problems()\n#> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\n# 02 Wrangling Data ----\ncol_types <- list(\n  id = col_character(),\n  date = col_date(\"%Y-%m-%d\"),\n  num_claims = col_double()\n)\n\npatent_tbl <- vroom(\n  file       = \"Patent_data_reduced/patent.tsv\", \n  delim      = \"\\t\", \n  col_types  = col_types,\n  na         = c(\"\", \"NA\", \"NULL\")\n)\n\ncol_types <- list(\n  id = col_character(),\n  type = col_character(),\n  organization = col_character()\n)\n\nassignee_tbl <- vroom(\n  file       = \"Patent_data_reduced/assignee.tsv\", \n  delim      = \"\\t\", \n  col_types  = col_types,\n  na         = c(\"\", \"NA\", \"NULL\")\n)\n\ncol_types <- list(\n  patent_id = col_character(),\n  assignee_id = col_character()\n)\n\npatent_assignee_tbl <- vroom(\n  file       = \"Patent_data_reduced/patent_assignee.tsv\", \n  delim      = \"\\t\", \n  col_types  = col_types,\n  na         = c(\"\", \"NA\", \"NULL\")\n)\n\ncol_types <- list(\n  patent_id = col_character(),\n  mainclass_id = col_character(),\n  sequence = col_integer()\n)\n\nuspc_tbl <- vroom(\n  file       = \"Patent_data_reduced/uspc.tsv\", \n  delim      = \"\\t\", \n  col_types  = col_types,\n  na         = c(\"\", \"NA\", \"NULL\")\n)\n\nUS_top_10 <- patent_assignee_tbl %>%\n  group_by(assignee_id) %>%\n  summarize(count = n()) %>%\n  arrange(desc(count)) %>%\n  left_join(assignee_tbl, c(\"assignee_id\" = \"id\"))\n\nChallange_1 <- US_top_10$organization %>%\n  head(n=50)\nChallange_1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>  [1] \"International Business Machines Corporation\"          \n#>  [2] \"Samsung Electronics Co., Ltd.\"                        \n#>  [3] \"Canon Kabushiki Kaisha\"                               \n#>  [4] \"Sony Corporation\"                                     \n#>  [5] \"Microsoft Corporation\"                                \n#>  [6] \"Google Inc.\"                                          \n#>  [7] \"Kabushiki Kaisha Toshiba\"                             \n#>  [8] \"QUALCOMM Incorporated\"                                \n#>  [9] \"LG Electronics Inc.\"                                  \n#> [10] \"Panasonic Corporation\"                                \n#> [11] \"Apple Inc.\"                                           \n#> [12] \"General Electric Company\"                             \n#> [13] \"Fujitsu Limited\"                                      \n#> [14] \"Seiko Epson Corporation\"                              \n#> [15] \"Toyota Jidosha Kabushiki Kaisha\"                      \n#> [16] \"Ricoh Company, Ltd.\"                                  \n#> [17] \"Hewlett-Packard Development Company, L.P.\"            \n#> [18] \"AT&T INTELLECTUAL PROPERTY I, L.P.\"                   \n#> [19] \"Intel Corporation\"                                    \n#> [20] \"Hon Hai Precision Industry Co., Ltd.\"                 \n#> [21] \"Samsung Display Co., Ltd.\"                            \n#> [22] \"Telefonaktiebolaget LM Ericsson (Publ)\"               \n#> [23] \"GM Global Technology Operations LLC\"                  \n#> [24] \"Taiwan Semiconductor Manufacturing Company, Ltd.\"     \n#> [25] \"BlackBerry Limited\"                                   \n#> [26] \"Honda Motor Co., Ltd.\"                                \n#> [27] \"Broadcom Corporation\"                                 \n#> [28] \"SEMICONDUCTOR ENERGY LABORATORY CO., LTD.\"            \n#> [29] \"Robert Bosch GmbH\"                                    \n#> [30] \"Brother Kogyo Kabushiki Kaisha\"                       \n#> [31] \"Sharp Kabushiki Kaisha\"                               \n#> [32] \"Cisco Technology, Inc.\"                               \n#> [33] \"Siemens Aktiengesellschaft\"                           \n#> [34] \"Hitachi, Ltd.\"                                        \n#> [35] \"Micron Technology, Inc.\"                              \n#> [36] \"FUJIFILM Corporation\"                                 \n#> [37] \"NEC Corporation\"                                      \n#> [38] \"Xerox Corporation\"                                    \n#> [39] \"Koninklijke Philips Electronics N.V.\"                 \n#> [40] \"The Boeing Company\"                                   \n#> [41] \"Electronics and Telecommunications Research Institute\"\n#> [42] \"Mitsubishi Electric Corporation\"                      \n#> [43] \"Fuji Xerox Co., Ltd.\"                                 \n#> [44] \"Texas Instruments Incorporated\"                       \n#> [45] \"Denso Corporation\"                                    \n#> [46] \"Ford Global Technologies, LLC\"                        \n#> [47] \"Huawei Technologies Co., Ltd.\"                        \n#> [48] \"Honeywell International Inc.\"                         \n#> [49] \"Amazon Technologies, Inc.\"                            \n#> [50] \"SK hynix Inc.\"\n```\n:::\n:::\n\nTable 1: The 50 companies with the most patents(descending order).\n\n\n# Challange No. 2\n## Recent Patent Activity (2014 Aug)\n\n\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-2_c761df9f48b2db3369806cc4e069d26d'}\n\n```{.r .cell-code}\nS_2014_05 <- patent_tbl %>%\n  filter(date >= \"2014-05-01\" & date < \"2014-06-01\") %>%\n  left_join(patent_assignee_tbl, c(\"id\" = \"patent_id\")) %>%\n  left_join(assignee_tbl, c(\"assignee_id\" = \"id\")) %>%\n  drop_na() %>%\n  group_by(organization) %>%\n  summarize(count =n()) %>%\n  arrange(desc(count))\n\nChallange_2 <-S_2014_05$organization %>%\n  head(n=10)\nChallange_2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>  [1] \"International Business Machines Corporation\"\n#>  [2] \"Samsung Electronics Co., Ltd.\"              \n#>  [3] \"Canon Kabushiki Kaisha\"                     \n#>  [4] \"Microsoft Corporation\"                      \n#>  [5] \"Sony Corporation\"                           \n#>  [6] \"Kabushiki Kaisha Toshiba\"                   \n#>  [7] \"Panasonic Corporation\"                      \n#>  [8] \"QUALCOMM Incorporated\"                      \n#>  [9] \"Apple Inc.\"                                 \n#> [10] \"Google Inc.\"\n```\n:::\n:::\n\nTable 2: Top 10 US companies with the most new granted patents in 2014 Aug.\n\n\n# Challange No. 3\n## Innovation in Tech\n\n\n\n::: {.cell hash='03_data_wrangling_cache/html/unnamed-chunk-3_4b98cda82de8e207ae9ccf50c433d9b5'}\n\n```{.r .cell-code}\nTop_mainclasses <- uspc_tbl %>%\n  inner_join(patent_assignee_tbl, c(\"patent_id\" = \"patent_id\")) %>%\n  inner_join(assignee_tbl, c(\"assignee_id\"= \"id\")) %>%\n  group_by(mainclass_id) %>%\n  summarize(count = n()) %>%\n  arrange(desc(count)) %>%\n  head(n=5)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning in inner_join(., patent_assignee_tbl, c(patent_id = \"patent_id\")): Detected an unexpected many-to-many relationship between `x` and `y`.\n#> ℹ Row 16 of `x` matches multiple rows in `y`.\n#> ℹ Row 197969 of `y` matches multiple rows in `x`.\n#> ℹ If a many-to-many relationship is expected, set `relationship =\n#>   \"many-to-many\"` to silence this warning.\n```\n:::\n\n```{.r .cell-code}\nChallange_3 <- Top_mainclasses$mainclass_id %>%\n  head(n=5)\nChallange_3\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] \"257\" \"455\" \"370\" \"438\" \"709\"\n```\n:::\n:::\n\nTable 3: Top 5 USPTO mainclasses for the worlds top ten companies.(descending order)\n\n\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}