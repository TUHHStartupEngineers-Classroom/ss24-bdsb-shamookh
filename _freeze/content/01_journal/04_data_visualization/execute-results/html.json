{
  "hash": "9c4fde74bb4a7396383371820455bc87",
  "result": {
    "markdown": "---\ntitle: \"Data Visualization\"\nauthor: \"Muhammad Shamookh\"\ndate: \"2024-05\"\noutput:\n  html_document:\n    toc: true\n    toc_float: true\n    df_print: paged\n    collapsed: false\n    number_sections: true\n    toc_depth: 3\n    code_folding: hide\n---\n\n\n# Data Visualization\n\nLast compiled: 2024-05-18\n\nI learned a lot about the themes in this part.\n\n# Challenge No. 01\n\nTotal covid cases data was plotted against time. \n\n## Total covid cases - Time\n\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-1_a1ce14a2c61d23f7dca714f3a7addab7'}\n\n```{.r .cell-code}\n# Load required libraries\nlibrary(tidyverse)\nlibrary(ggrepel)\n\n# Load and preview the data\ncovid_data_tbl <- read_csv(\"https://covid.ourworldindata.org/data/owid-covid-data.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Rows: 399276 Columns: 67\n#> ── Column specification ────────────────────────────────────────────────────────\n#> Delimiter: \",\"\n#> chr   (4): iso_code, continent, location, tests_units\n#> dbl  (62): total_cases, new_cases, new_cases_smoothed, total_deaths, new_dea...\n#> date  (1): date\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\ncovid_data_tbl %>%\n  head(n=5)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"iso_code\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"continent\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"location\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"date\"],\"name\":[4],\"type\":[\"date\"],\"align\":[\"right\"]},{\"label\":[\"total_cases\"],\"name\":[5],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"new_cases\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"new_cases_smoothed\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"total_deaths\"],\"name\":[8],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"new_deaths\"],\"name\":[9],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"new_deaths_smoothed\"],\"name\":[10],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"total_cases_per_million\"],\"name\":[11],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"new_cases_per_million\"],\"name\":[12],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"new_cases_smoothed_per_million\"],\"name\":[13],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"total_deaths_per_million\"],\"name\":[14],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"new_deaths_per_million\"],\"name\":[15],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"new_deaths_smoothed_per_million\"],\"name\":[16],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"reproduction_rate\"],\"name\":[17],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"icu_patients\"],\"name\":[18],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"icu_patients_per_million\"],\"name\":[19],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"hosp_patients\"],\"name\":[20],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"hosp_patients_per_million\"],\"name\":[21],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"weekly_icu_admissions\"],\"name\":[22],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"weekly_icu_admissions_per_million\"],\"name\":[23],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"weekly_hosp_admissions\"],\"name\":[24],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"weekly_hosp_admissions_per_million\"],\"name\":[25],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"total_tests\"],\"name\":[26],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"new_tests\"],\"name\":[27],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"total_tests_per_thousand\"],\"name\":[28],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"new_tests_per_thousand\"],\"name\":[29],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"new_tests_smoothed\"],\"name\":[30],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"new_tests_smoothed_per_thousand\"],\"name\":[31],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"positive_rate\"],\"name\":[32],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"tests_per_case\"],\"name\":[33],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"tests_units\"],\"name\":[34],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"total_vaccinations\"],\"name\":[35],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"people_vaccinated\"],\"name\":[36],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"people_fully_vaccinated\"],\"name\":[37],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"total_boosters\"],\"name\":[38],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"new_vaccinations\"],\"name\":[39],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"new_vaccinations_smoothed\"],\"name\":[40],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"total_vaccinations_per_hundred\"],\"name\":[41],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"people_vaccinated_per_hundred\"],\"name\":[42],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"people_fully_vaccinated_per_hundred\"],\"name\":[43],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"total_boosters_per_hundred\"],\"name\":[44],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"new_vaccinations_smoothed_per_million\"],\"name\":[45],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"new_people_vaccinated_smoothed\"],\"name\":[46],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"new_people_vaccinated_smoothed_per_hundred\"],\"name\":[47],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"stringency_index\"],\"name\":[48],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"population_density\"],\"name\":[49],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"median_age\"],\"name\":[50],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"aged_65_older\"],\"name\":[51],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"aged_70_older\"],\"name\":[52],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"gdp_per_capita\"],\"name\":[53],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"extreme_poverty\"],\"name\":[54],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"cardiovasc_death_rate\"],\"name\":[55],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"diabetes_prevalence\"],\"name\":[56],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"female_smokers\"],\"name\":[57],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"male_smokers\"],\"name\":[58],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"handwashing_facilities\"],\"name\":[59],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"hospital_beds_per_thousand\"],\"name\":[60],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"life_expectancy\"],\"name\":[61],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"human_development_index\"],\"name\":[62],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"population\"],\"name\":[63],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"excess_mortality_cumulative_absolute\"],\"name\":[64],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"excess_mortality_cumulative\"],\"name\":[65],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"excess_mortality\"],\"name\":[66],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"excess_mortality_cumulative_per_million\"],\"name\":[67],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"AFG\",\"2\":\"Asia\",\"3\":\"Afghanistan\",\"4\":\"2020-01-05\",\"5\":\"NA\",\"6\":\"0\",\"7\":\"NA\",\"8\":\"NA\",\"9\":\"0\",\"10\":\"NA\",\"11\":\"NA\",\"12\":\"0\",\"13\":\"NA\",\"14\":\"NA\",\"15\":\"0\",\"16\":\"NA\",\"17\":\"NA\",\"18\":\"NA\",\"19\":\"NA\",\"20\":\"NA\",\"21\":\"NA\",\"22\":\"NA\",\"23\":\"NA\",\"24\":\"NA\",\"25\":\"NA\",\"26\":\"NA\",\"27\":\"NA\",\"28\":\"NA\",\"29\":\"NA\",\"30\":\"NA\",\"31\":\"NA\",\"32\":\"NA\",\"33\":\"NA\",\"34\":\"NA\",\"35\":\"NA\",\"36\":\"NA\",\"37\":\"NA\",\"38\":\"NA\",\"39\":\"NA\",\"40\":\"NA\",\"41\":\"NA\",\"42\":\"NA\",\"43\":\"NA\",\"44\":\"NA\",\"45\":\"NA\",\"46\":\"NA\",\"47\":\"NA\",\"48\":\"0\",\"49\":\"54.422\",\"50\":\"18.6\",\"51\":\"2.581\",\"52\":\"1.337\",\"53\":\"1803.987\",\"54\":\"NA\",\"55\":\"597.029\",\"56\":\"9.59\",\"57\":\"NA\",\"58\":\"NA\",\"59\":\"37.746\",\"60\":\"0.5\",\"61\":\"64.83\",\"62\":\"0.511\",\"63\":\"41128772\",\"64\":\"NA\",\"65\":\"NA\",\"66\":\"NA\",\"67\":\"NA\"},{\"1\":\"AFG\",\"2\":\"Asia\",\"3\":\"Afghanistan\",\"4\":\"2020-01-06\",\"5\":\"NA\",\"6\":\"0\",\"7\":\"NA\",\"8\":\"NA\",\"9\":\"0\",\"10\":\"NA\",\"11\":\"NA\",\"12\":\"0\",\"13\":\"NA\",\"14\":\"NA\",\"15\":\"0\",\"16\":\"NA\",\"17\":\"NA\",\"18\":\"NA\",\"19\":\"NA\",\"20\":\"NA\",\"21\":\"NA\",\"22\":\"NA\",\"23\":\"NA\",\"24\":\"NA\",\"25\":\"NA\",\"26\":\"NA\",\"27\":\"NA\",\"28\":\"NA\",\"29\":\"NA\",\"30\":\"NA\",\"31\":\"NA\",\"32\":\"NA\",\"33\":\"NA\",\"34\":\"NA\",\"35\":\"NA\",\"36\":\"NA\",\"37\":\"NA\",\"38\":\"NA\",\"39\":\"NA\",\"40\":\"NA\",\"41\":\"NA\",\"42\":\"NA\",\"43\":\"NA\",\"44\":\"NA\",\"45\":\"NA\",\"46\":\"NA\",\"47\":\"NA\",\"48\":\"0\",\"49\":\"54.422\",\"50\":\"18.6\",\"51\":\"2.581\",\"52\":\"1.337\",\"53\":\"1803.987\",\"54\":\"NA\",\"55\":\"597.029\",\"56\":\"9.59\",\"57\":\"NA\",\"58\":\"NA\",\"59\":\"37.746\",\"60\":\"0.5\",\"61\":\"64.83\",\"62\":\"0.511\",\"63\":\"41128772\",\"64\":\"NA\",\"65\":\"NA\",\"66\":\"NA\",\"67\":\"NA\"},{\"1\":\"AFG\",\"2\":\"Asia\",\"3\":\"Afghanistan\",\"4\":\"2020-01-07\",\"5\":\"NA\",\"6\":\"0\",\"7\":\"NA\",\"8\":\"NA\",\"9\":\"0\",\"10\":\"NA\",\"11\":\"NA\",\"12\":\"0\",\"13\":\"NA\",\"14\":\"NA\",\"15\":\"0\",\"16\":\"NA\",\"17\":\"NA\",\"18\":\"NA\",\"19\":\"NA\",\"20\":\"NA\",\"21\":\"NA\",\"22\":\"NA\",\"23\":\"NA\",\"24\":\"NA\",\"25\":\"NA\",\"26\":\"NA\",\"27\":\"NA\",\"28\":\"NA\",\"29\":\"NA\",\"30\":\"NA\",\"31\":\"NA\",\"32\":\"NA\",\"33\":\"NA\",\"34\":\"NA\",\"35\":\"NA\",\"36\":\"NA\",\"37\":\"NA\",\"38\":\"NA\",\"39\":\"NA\",\"40\":\"NA\",\"41\":\"NA\",\"42\":\"NA\",\"43\":\"NA\",\"44\":\"NA\",\"45\":\"NA\",\"46\":\"NA\",\"47\":\"NA\",\"48\":\"0\",\"49\":\"54.422\",\"50\":\"18.6\",\"51\":\"2.581\",\"52\":\"1.337\",\"53\":\"1803.987\",\"54\":\"NA\",\"55\":\"597.029\",\"56\":\"9.59\",\"57\":\"NA\",\"58\":\"NA\",\"59\":\"37.746\",\"60\":\"0.5\",\"61\":\"64.83\",\"62\":\"0.511\",\"63\":\"41128772\",\"64\":\"NA\",\"65\":\"NA\",\"66\":\"NA\",\"67\":\"NA\"},{\"1\":\"AFG\",\"2\":\"Asia\",\"3\":\"Afghanistan\",\"4\":\"2020-01-08\",\"5\":\"NA\",\"6\":\"0\",\"7\":\"NA\",\"8\":\"NA\",\"9\":\"0\",\"10\":\"NA\",\"11\":\"NA\",\"12\":\"0\",\"13\":\"NA\",\"14\":\"NA\",\"15\":\"0\",\"16\":\"NA\",\"17\":\"NA\",\"18\":\"NA\",\"19\":\"NA\",\"20\":\"NA\",\"21\":\"NA\",\"22\":\"NA\",\"23\":\"NA\",\"24\":\"NA\",\"25\":\"NA\",\"26\":\"NA\",\"27\":\"NA\",\"28\":\"NA\",\"29\":\"NA\",\"30\":\"NA\",\"31\":\"NA\",\"32\":\"NA\",\"33\":\"NA\",\"34\":\"NA\",\"35\":\"NA\",\"36\":\"NA\",\"37\":\"NA\",\"38\":\"NA\",\"39\":\"NA\",\"40\":\"NA\",\"41\":\"NA\",\"42\":\"NA\",\"43\":\"NA\",\"44\":\"NA\",\"45\":\"NA\",\"46\":\"NA\",\"47\":\"NA\",\"48\":\"0\",\"49\":\"54.422\",\"50\":\"18.6\",\"51\":\"2.581\",\"52\":\"1.337\",\"53\":\"1803.987\",\"54\":\"NA\",\"55\":\"597.029\",\"56\":\"9.59\",\"57\":\"NA\",\"58\":\"NA\",\"59\":\"37.746\",\"60\":\"0.5\",\"61\":\"64.83\",\"62\":\"0.511\",\"63\":\"41128772\",\"64\":\"NA\",\"65\":\"NA\",\"66\":\"NA\",\"67\":\"NA\"},{\"1\":\"AFG\",\"2\":\"Asia\",\"3\":\"Afghanistan\",\"4\":\"2020-01-09\",\"5\":\"NA\",\"6\":\"0\",\"7\":\"NA\",\"8\":\"NA\",\"9\":\"0\",\"10\":\"NA\",\"11\":\"NA\",\"12\":\"0\",\"13\":\"NA\",\"14\":\"NA\",\"15\":\"0\",\"16\":\"NA\",\"17\":\"NA\",\"18\":\"NA\",\"19\":\"NA\",\"20\":\"NA\",\"21\":\"NA\",\"22\":\"NA\",\"23\":\"NA\",\"24\":\"NA\",\"25\":\"NA\",\"26\":\"NA\",\"27\":\"NA\",\"28\":\"NA\",\"29\":\"NA\",\"30\":\"NA\",\"31\":\"NA\",\"32\":\"NA\",\"33\":\"NA\",\"34\":\"NA\",\"35\":\"NA\",\"36\":\"NA\",\"37\":\"NA\",\"38\":\"NA\",\"39\":\"NA\",\"40\":\"NA\",\"41\":\"NA\",\"42\":\"NA\",\"43\":\"NA\",\"44\":\"NA\",\"45\":\"NA\",\"46\":\"NA\",\"47\":\"NA\",\"48\":\"0\",\"49\":\"54.422\",\"50\":\"18.6\",\"51\":\"2.581\",\"52\":\"1.337\",\"53\":\"1803.987\",\"54\":\"NA\",\"55\":\"597.029\",\"56\":\"9.59\",\"57\":\"NA\",\"58\":\"NA\",\"59\":\"37.746\",\"60\":\"0.5\",\"61\":\"64.83\",\"62\":\"0.511\",\"63\":\"41128772\",\"64\":\"NA\",\"65\":\"NA\",\"66\":\"NA\",\"67\":\"NA\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\n# Define places to filter\nplaces <- c('Germany', 'France', 'Spain', 'United Kingdom', 'United States')\n\n# Filter the data for selected places\ncovid_data_tbl_selected <- covid_data_tbl %>%\n  filter(location %in% places)\n\n# Get the range of dates\nlast_date <- max(covid_data_tbl$date)\nfirst_date <- min(covid_data_tbl$date)\n\n# Get the latest total cases for the US\nUS_covid_data_tbl <- covid_data_tbl %>%\n  filter(location == \"United States\")\n\nus_last_record <- US_covid_data_tbl %>%\n  filter(date == max(date))\n\nus_last_case <- us_last_record$total_cases\nus_last_date <- us_last_record$date\n\n# Get the latest total cases for Germany\nGermany_covid_data_tbl <- covid_data_tbl %>%\n  filter(location == \"Germany\")\n\ngermany_last_record <- Germany_covid_data_tbl %>%\n  filter(date == max(date))\n\ngermany_last_case <- germany_last_record$total_cases\ngermany_last_date <- germany_last_record$date\n\n# Plot\nggplot(covid_data_tbl_selected, aes(x = date, y = total_cases, color = location)) +\n  geom_line(size = 1.2) +\n  geom_label_repel(data = data.frame(date = us_last_date, total_cases = us_last_case, location = \"United States\"),\n                   aes(x = date, y = total_cases, label = paste(\"USA:\", format(us_last_case, big.mark = \",\"))),\n                   fill = \"purple\", color = \"white\", nudge_y = 5000000, size = 3) +\n  geom_label_repel(data = data.frame(date = germany_last_date, total_cases = germany_last_case, location = \"Germany\"),\n                   aes(x = date, y = total_cases, label = paste(\"Germany:\", format(germany_last_case, big.mark = \",\"))),\n                   fill = \"blue\", color = \"white\", nudge_y = 2000000, size = 3) +\n  labs(\n    subtitle = \"As of 09/05/2024\",\n    title = \"COVID-19 confirmed cases worldwide\",\n    x = \"\", \n    y = \"Cumulative Cases\",\n    color = \"Country\"\n  ) +\n  theme(\n    plot.title = element_text(\n      color = \"white\",\n      size = 16,\n      face = \"bold\"\n    ),\n    plot.subtitle = element_text(\n      color = \"white\",\n      size = 12\n    ),\n    legend.position = \"bottom\",\n    legend.background = element_rect(\n      fill = \"#222222\",\n      color = \"#aaaaaa\"\n    ),\n    legend.text = element_text(\n      color = \"#aaaaaa\"\n    ),\n    legend.title = element_text(\n      color = \"#aaaaaa\",\n      hjust = 0.5,\n      vjust = 0.5\n    ),\n    axis.text.x = element_text(\n      angle = 45,\n      hjust = 1,\n      color = \"#aaaaaa\"\n    ),\n    axis.text.y = element_text(\n      color = \"#aaaaaa\"\n    ),\n    axis.title.y = element_text(\n      color = \"white\",\n      size = 13,\n      face = \"bold\"\n    ),\n    plot.background = element_rect(\n      fill = \"#222222\"\n    ),\n    panel.background = element_rect(\n      fill = \"#222222\"\n    ),\n    panel.grid = element_line(\n      color = \"#888888\"\n    ),\n    panel.grid.minor = element_blank(),\n    legend.key = element_rect(\n      fill = \"#222222\"\n    )\n  ) +\n  scale_x_date(date_breaks = \"1 month\", date_labels = \"%B '%y\") +\n  scale_y_continuous(breaks = c(0, 25000000, 50000000, 75000000),\n                     labels = c(\"0\", \"25M\", \"50M\", \"75M\")) +\n  scale_color_manual(values = c(\"Germany\" = \"red\", \n                                \"France\" = \"blue\", \n                                \"Spain\" = \"green\", \n                                \"United Kingdom\" = \"orange\", \n                                \"United States\" = \"purple\"),\n                     name = \"Country\",\n                     labels = c(\"Germany\", \"France\", \"Spain\", \"United Kingdom\", \"United States\")) +\n  guides(color = guide_legend(nrow = 2, byrow = TRUE))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\n#> ℹ Please use `linewidth` instead.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: Removed 84 rows containing missing values or values outside the scale range\n#> (`geom_line()`).\n```\n:::\n\n::: {.cell-output-display}\n![](04_data_visualization_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n# Challenge No. 02\n\nCase-fatality rate in every countries were plotted on a map.\n\n## World case-fatality rate\n\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-2_034df8c3f27c25f1e950846ba3d9f09c'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(maps)\nlibrary(purrr)\n\nworld <- map_data(\"world\")\ncovid_data_tbl <- read_csv(\"https://covid.ourworldindata.org/data/owid-covid-data.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Rows: 399276 Columns: 67\n#> ── Column specification ────────────────────────────────────────────────────────\n#> Delimiter: \",\"\n#> chr   (4): iso_code, continent, location, tests_units\n#> dbl  (62): total_cases, new_cases, new_cases_smoothed, total_deaths, new_dea...\n#> date  (1): date\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nlatest_date <- covid_data_tbl$date %>% max()\n\ncovid_data_tbl_plot <- covid_data_tbl %>%\n  select(location, total_cases, total_deaths, population) %>%\n  drop_na() %>%\n  group_by(location) %>%\n  summarise(total_cases = last(total_cases), \n            total_deaths = last(total_deaths),\n            population = last(population),\n            mortality_rate = total_deaths / population,\n            case_fatality_rate = total_deaths / total_cases) \n\nworld_covid <- covid_data_tbl_plot %>%\n  mutate(location = case_when(\n    location == \"United Kingdom\" ~ \"UK\",\n    location == \"United States\" ~ \"USA\",\n    location == \"Democratic Republic of Congo\" ~ \"Democratic Republic of the Congo\",\n    TRUE ~ location\n  )) %>%\n  right_join(world, c(\"location\" = \"region\")) \n\n# Visualize mortality rate\nggplot() +\n  geom_map(data = world_covid,\n           aes(x = long, y = lat, map_id = location, fill = mortality_rate),\n           col = \"white\",\n           map = world) +\n  scale_fill_gradient(low = \"#aa7776\", high = \"#8b0000\") +\n  theme(axis.title = element_blank(),\n        axis.text = element_blank(),\n        plot.background = element_rect(fill = \"#222222\"),\n        panel.background = element_rect(fill = \"#222222\"),\n        legend.background = element_rect(fill = \"#222222\", color = \"#aaaaaa\"),\n        legend.text = element_text(color = \"#aaaaaa\"),\n        legend.title = element_text(color = \"#aaaaaa\", hjust = 0.5, vjust = 0.5))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning in geom_map(data = world_covid, aes(x = long, y = lat, map_id =\n#> location, : Ignoring unknown aesthetics: x and y\n```\n:::\n\n::: {.cell-output-display}\n![](04_data_visualization_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Visualize case-fatality rate\nggplot() +\n  geom_map(data = world_covid,\n           aes(x = long, y = lat, map_id = location, fill = case_fatality_rate),\n           col = \"white\",\n           map = world) +\n  scale_fill_gradient(low = \"#aa7776\", high = \"#8b0000\") +\n  theme(axis.title = element_blank(),\n        axis.text = element_blank(),\n        plot.background = element_rect(fill = \"#222222\"),\n        panel.background = element_rect(fill = \"#222222\"),\n        legend.background = element_rect(fill = \"#222222\", color = \"#aaaaaa\"),\n        legend.text = element_text(color = \"#aaaaaa\"),\n        legend.title = element_text(color = \"#aaaaaa\", hjust = 0.5, vjust = 0.5))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning in geom_map(data = world_covid, aes(x = long, y = lat, map_id =\n#> location, : Ignoring unknown aesthetics: x and y\n```\n:::\n\n::: {.cell-output-display}\n![](04_data_visualization_files/figure-html/unnamed-chunk-2-2.png){width=672}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}