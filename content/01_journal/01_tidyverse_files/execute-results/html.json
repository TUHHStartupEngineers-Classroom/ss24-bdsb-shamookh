{
  "hash": "04e1cb3bceba41c22ae53c7a6e174edd",
  "result": {
    "markdown": "---\ntitle: \"01 Tidyverse\"\nauthor: \"Muhammad Shamookh\"\ndate: \"2024-04-21\"\noutput:\n  html_document:\n    toc: true\n    toc_float: true\n    df_print: paged\n    collapsed: false\n    number_sections: true\n    toc_depth: 3\n    code_folding: hide\n---\n\n\n\n\n# Tidyverse\nLast compiled: 2024-04-22\n\nThroughout the chapter, I gained proficiency in the fundamental aspects of the tidyverse library, encompassing essential skills in both data wrangling and data visualization.\n\n# Challenge No. 01\nUtilizing the **'bike_orderlines_wrangled_tbl'** dataset and the acquired knowledge, I derived the 'state' and 'city' columns for grouping solely by the 'state' variable. Later, I visualized sales by states through a bar plot, to attain further insights into their relationship.\n\n## Sales by State\n\n::: {.cell hash='01_tidyverse_cache/html/unnamed-chunk-1_93cf70c24e5de3e59511a85064febbb0'}\n\n```{.r .cell-code}\n# Data Science at TUHH ------------------------------------------------------\n# SALES ANALYSIS ----\n\n# 1.0 Load libraries ----\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#> ✔ dplyr     1.1.4     ✔ readr     2.1.5\n#> ✔ forcats   1.0.0     ✔ stringr   1.5.1\n#> ✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n#> ✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n#> ✔ purrr     1.0.2     \n#> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#> ✖ dplyr::filter() masks stats::filter()\n#> ✖ dplyr::lag()    masks stats::lag()\n#> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(readxl)\n\n# 2.0 Importing Files ----\nbike_orderlines_wrangled_tbl <- read_rds(\"01_tidyverse_files/bike_orderlines.rds\")\n\n# 3.0 Examining Data ----\n#bike_orderlines_wrangled_tbl %>%\n#head(bike_orderlines_wrangled_tbl, n=7)\n\n# 4.0 Wrangling Data ----\nbike_orderlines_wrangled_tbl <- bike_orderlines_wrangled_tbl %>%\n  separate(col = location,\n           into = c(\"city\", \"state\"),\n           sep = \", \")\n\n# 5.0 Business insight ----\n#5.1 Challenge No. 1 - Sales by State ----\n\n#Step 1 - Manipulate----\nsales_by_state <- bike_orderlines_wrangled_tbl %>%\n  select(state, total_price) %>%\n  group_by(state) %>%\n  summarize(sales = sum(total_price))\nsales_by_state %>% head(n=10)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"state\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"sales\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Baden-Württemberg\",\"2\":\"6521090\"},{\"1\":\"Bavaria\",\"2\":\"6742819\"},{\"1\":\"Berlin\",\"2\":\"1128433\"},{\"1\":\"Bremen\",\"2\":\"10653499\"},{\"1\":\"Hamburg\",\"2\":\"3874756\"},{\"1\":\"Hesse\",\"2\":\"1558901\"},{\"1\":\"Lower Saxony\",\"2\":\"4107115\"},{\"1\":\"Mecklenburg-Western Pomerania\",\"2\":\"618974\"},{\"1\":\"North Rhine-Westphalia\",\"2\":\"21200613\"},{\"1\":\"Saxony\",\"2\":\"2230245\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\n#Step 2 - Visulaize----\nplot_1 <- sales_by_state %>%\n  ggplot(aes(x = state, y = sales),)+\n  geom_col(fill = \"blue\")+\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))+\n  labs(title = \"Sales By State\")+\n  labs(y = \"Sales\")+labs(x = \"States\")+\n  theme(plot.title = element_text(size = 34))+\n  theme(axis.title.x = element_text(size = 28))+\n  theme(axis.title.y = element_text(size = 28))+\n  theme(axis.text.y = element_text(size = 14))+\n  theme(axis.text.x = element_text(size = 14))+\n  theme(text = element_text(family = \"Times New Roman\"))+\n  theme(axis.title = element_text(face=\"bold\"))+\n  theme(axis.text = element_text(face=\"bold\"))+\n  theme(plot.title = element_text(face=\"bold\"))+\n  theme(axis.title.x=element_text(colour=\"black\"))+\n  theme(axis.title.y=element_text(colour=\"black\"))+\n  theme(axis.text.x=element_text(colour=\"black\"))+\n  theme(axis.text.y=element_text(colour=\"black\"))+\n  theme(plot.title=element_text(hjust=0.5))\n\nplot_1\n```\n\n::: {.cell-output-display}\n![](01_tidyverse_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggsave(\"01_tidyverse_files/figure-html/sales_by_state.png\", height = 7 , width = 12)\n```\n:::\n\n\n**The above figure illustrates that North Rhine-Westphalia has the highest revenue among all states.**\n\n\n# Challenge No. 02\n\nBy utilizing the **'bike_orderlines_wrangled_tbl'** dataframe, applying grouping based on the 'state' and 'year' column. Subsequently, then visualized the sales distribution across different states over the years, employing a bar plot with facets arranged by state using **'facet_wrap(~state)'**.\n\n\n## Sales by State by Year\n\n\n::: {.cell hash='01_tidyverse_cache/html/unnamed-chunk-2_7acb542b09fac31c8bc19a5758de036e'}\n\n```{.r .cell-code}\n# 5.2 Challenge No. 2 - sales by location and year (facet_wrap) ----\n\n#Step 1 - Manipulate----\nsales_by_state_by_year <- bike_orderlines_wrangled_tbl %>%\n  select(state, total_price, order_date) %>%\n  mutate(year = year(order_date)) %>%\n  group_by(year) %>%\n  summarize(sales = sum(total_price), state = state)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n#> Warning: Returning more (or less) than 1 row per `summarise()` group was deprecated in\n#> dplyr 1.1.0.\n#> ℹ Please use `reframe()` instead.\n#> ℹ When switching from `summarise()` to `reframe()`, remember that `reframe()`\n#>   always returns an ungrouped data frame and adjust accordingly.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n#> `summarise()` has grouped output by 'year'. You can override using the\n#> `.groups` argument.\n```\n:::\n\n```{.r .cell-code}\nsales_by_state_by_year %>% head(n=5)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"year\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"sales\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"state\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"2015\",\"2\":\"9930282\",\"3\":\"Hamburg\"},{\"1\":\"2015\",\"2\":\"9930282\",\"3\":\"Hamburg\"},{\"1\":\"2015\",\"2\":\"9930282\",\"3\":\"Bremen\"},{\"1\":\"2015\",\"2\":\"9930282\",\"3\":\"Bremen\"},{\"1\":\"2015\",\"2\":\"9930282\",\"3\":\"Baden-Württemberg\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n\n```{.r .cell-code}\n#Step 2 - Visulaize----\nplot_2 <- sales_by_state_by_year %>%\n  ggplot(aes(x = year, y = sales, fill = state)) +\n  facet_wrap(~state) +\n  geom_col(fill = \"chocolate2\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))+\n  labs(title = \"Sales By Location and Year\")+\n  labs(x = \"Year\")+\n  labs(y = \"Sales\")+\n  theme(plot.title = element_text(size = 34))+\n  theme(axis.title.x = element_text(size = 28))+\n  theme(axis.title.y = element_text(size = 28))+\n  theme(axis.text.y = element_text(size = 14))+\n  theme(axis.text.x = element_text(size = 14))+\n  theme(text = element_text(family = \"Times New Roman\"))+\n  theme(axis.title = element_text(face=\"bold\"))+\n  theme(axis.text = element_text(face=\"bold\"))+\n  theme(plot.title = element_text(face=\"bold\"))+\n  theme(axis.title.x=element_text(colour=\"black\"))+\n  theme(axis.title.y=element_text(colour=\"black\"))+\n  theme(axis.text.x=element_text(colour=\"black\"))+\n  theme(axis.text.y=element_text(colour=\"black\"))+\n  theme(plot.title=element_text(hjust=0.5))+\n  theme(strip.text = element_text(size = 6, color = \"black\"))+\n  theme(strip.text = element_text(face = \"bold\"))\nplot_2\n```\n\n::: {.cell-output-display}\n![](01_tidyverse_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggsave(\"01_tidyverse_files/figure-html/Sales_by_State_und_Location.png\", height = 15 , width = 20)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}